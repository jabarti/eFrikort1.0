<?xml version="1.0" encoding="UTF-8" ?>
<!-- 
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements. See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership. Logica licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License. You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied. See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' 
    xmlns:tns='urn:com:logica:se:healthcare:efrikort:administration:GroupPersonResponder:2'                
    xmlns:efrikortriv='urn:com:logica:se:healthcare:efrikort:riv:2'
    xmlns:efrikort='urn:com:logica:se:healthcare:efrikort:2'
    targetNamespace='urn:com:logica:se:healthcare:efrikort:administration:GroupPersonResponder:2'
    elementFormDefault='qualified'
    attributeFormDefault='unqualified'
    version='2.0'>

    <xs:import schemaLocation='../../../core_components/ehr_efrikortriv_2.0.xsd' namespace='urn:com:logica:se:healthcare:efrikort:riv:2' />
    <xs:import schemaLocation='../../../core_components/ehr_efrikort_2.0.xsd' namespace='urn:com:logica:se:healthcare:efrikort:2' />


    <xs:element name='GroupPersonRequest' type='tns:GroupPersonRequestType'/>

    <xs:complexType name='GroupPersonRequestType'>
        <xs:annotation>
            <xs:documentation xml:lang='sv'>
                Denna tjänst används för att gruppera en personidentiteter till ett frikort.
                När en personidentitet flyttas från ett frikort eller en gruppering kommer alla transaktioner tillhörande personidentiteten att följa med.    
                Frikortet får status preliminärt om befintliga transaktioner tillsammans med eventuellt flyttade transaktion når eller övergår gränsen för vårdhuvudmannens belopp för högkostnadskort.
                Frikort som redan har status slutgiltigt behåller samma status.          
                Det går ej att gruppera personnummer för två myndiga personer.
                När grupperingen har registrerats, registreras även patientens samtycke till att använda tjänsten.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="CarePrincipalId" type="efrikort:HsaId"/>
            <xs:element name="CardOwnerPersonId" type="efrikort:PersonIdValue"/>
            <xs:element name="CardTypeId" type="efrikort:CardTypeId"/>
            <xs:element name="PersonId" type="efrikort:PersonIdValue"/>
            <xs:element name="Actor" type="efrikort:ActorType"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name='GroupPersonResponse' type='tns:GroupPersonResponseType'/>

    <xs:complexType name='GroupPersonResponseType'>
        <xs:annotation>
            <xs:documentation xml:lang='sv'>
                Denna tjänst används för att gruppera en personidentiteter till ett frikort.
                När en personidentitet flyttas från ett frikort eller en gruppering kommer alla transaktioner tillhörande personidentiteten att följa med.    
                Frikortet får status preliminärt om befintliga transaktioner tillsammans med eventuellt flyttade transaktion når eller övergår gränsen för vårdhuvudmannens belopp för högkostnadskort.
                Frikort som redan har status slutgiltigt behåller samma status.          
                Det går ej att gruppera personnummer för två myndiga personer.
                När grupperingen har registrerats, registreras även patientens samtycke till att använda tjänsten.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="ResultType" type="efrikortriv:ResultType"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
